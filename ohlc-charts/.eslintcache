[{"C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\App.js":"1","C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\index.js":"2","C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\reportWebVitals.js":"3","C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\Components\\Chart.js":"4","C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\Esper\\Esper.js":"5"},{"size":376,"mtime":1609701146222,"results":"6","hashOfConfig":"7"},{"size":429,"mtime":1609615901156,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1609615974426,"results":"9","hashOfConfig":"7"},{"size":3158,"mtime":1609690883500,"results":"10","hashOfConfig":"7"},{"size":760,"mtime":1609703227054,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"dl9ze9",{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\App.js",["23"],"C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\index.js",["24"],"C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\reportWebVitals.js",[],"C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\Components\\Chart.js",["25"],"import React, { useEffect, useState } from \"react\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { utcDay } from \"d3-time\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\n\r\nlet ChartJS = (props) => {\r\n  const { type, width, ratio } = props;\r\n  const [data, setData] = useState([\r\n    {\r\n      date: new Date(\"2020-01-01 00:00:00\"),\r\n      open: 33,\r\n      high: 33.5,\r\n      low: 32.98,\r\n      close: 33.4,\r\n      volume: 594858493,\r\n    },\r\n    {\r\n      date: new Date(\"2020-01-02 00:00:00\"),\r\n      open: 33.4,\r\n      high: 35,\r\n      low: 31,\r\n      close: 32.4,\r\n      volume: 594858443,\r\n    },\r\n  ]);\r\n\r\n  const xAccessor = (d) => {\r\n    // console.log(d.date, \"ddddddddddddddddd\");\r\n    return d.date;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let updated = [];\r\n    fetch(\"http://kaboom.rksv.net/api/historical?interval=1\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        data.map((ele) => {\r\n          let now = ele.split(\",\");\r\n          // let now = new Date((ele.split(\",\")[0])*1000)\r\n          console.log(now, \"nowwwwwww\");\r\n          updated.push({\r\n            date: new Date(parseInt(now[0])),\r\n            open: parseInt(now[1]),\r\n            high: parseInt(now[2]),\r\n            low: parseInt(now[3]),\r\n            close: parseInt(now[4]),\r\n            volume: parseInt(now[5]),\r\n          });\r\n        });\r\n\r\n        console.log(updated, \"updated\");\r\n        updated.sort(function (a, b) {\r\n          // Turn your strings into dates, and then subtract them\r\n          // to get a value that is either negative, positive, or zero.\r\n          return new Date(a.date) - new Date(b.date);\r\n        });\r\n\r\n        console.log(updated, \"updated\");\r\n        setData(updated);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  if (data == null) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // const start = xAccessor(last(data));\r\n  // const end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n  // const xExtents = [start, end];\r\n\r\n  return (\r\n    <div className=\"ChartJS\">\r\n      <ChartCanvas\r\n        height={400}\r\n        ratio={ratio}\r\n        width={width}\r\n        margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n        type={type}\r\n        data={data}\r\n        seriesName=\"MSFT\"\r\n        xAccessor={xAccessor}\r\n        xScale={scaleTime()}\r\n        // displayXAccessor={displayXAccessor}\r\n        // xExtents={xExtents}\r\n        xExtents={[new Date(2009, 0, 30), new Date(2022, 11, 16)]}\r\n      >\r\n        <Chart id={1} yExtents={(d) => [d.high, d.low]}>\r\n          <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6} />\r\n          <YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n          <CandlestickSeries width={timeIntervalBarWidth(utcDay)} />\r\n        </Chart>\r\n      </ChartCanvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nChartJS.defaultProps = {\r\n  type: \"svg\",\r\n};\r\n\r\nChartJS = fitWidth(ChartJS);\r\n\r\nexport default ChartJS;\r\n","C:\\Users\\Thrifty\\Downloads\\Upstox\\ohlc-charts\\src\\Esper\\Esper.js",["26","27"],{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":13},{"ruleId":"32","severity":2,"message":"33","line":15,"column":1,"nodeType":"30","messageId":"34","endLine":15,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":41,"column":24,"nodeType":"37","messageId":"38","endLine":41,"endColumn":26},{"ruleId":"28","severity":1,"message":"39","line":4,"column":10,"nodeType":"30","messageId":"31","endLine":4,"endColumn":20},{"ruleId":"28","severity":1,"message":"40","line":5,"column":10,"nodeType":"30","messageId":"31","endLine":5,"endColumn":16},"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","no-undef","'reportWebVitals' is not defined.","undef","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'groupCount' is assigned a value but never used.","'groups' is assigned a value but never used."]